#include <stdlib.h>
#include <stdio.h>
#include <string.h>

void prefix(int *p, char *s)
{
	p[0] = 0;
	int t = 0, i = 1;
	while (i < strlen(s))
	{
		while ((t > 0) && (s[t] != s[i]))
		{
			t = p[t - 1];
		}

		if (s[t] == s[i]) t++;
		p[i] = t;
		i++;
	}
}

void KMPSubst(char *s, char *t)
{
	int s_n = strlen(s), t_n = strlen(t);
	int *p = (int*) malloc(s_n* sizeof(int));
	prefix(p, s);

	int q = 0, k = 0, i = 0;
	while (k < t_n)
	{
		while (q > 0 && s[q] != t[k])
		{
			q = p[q - 1];
		}

		if (s[q] == t[k]) q++;
		if (q == s_n)
		{
			printf("%d\n", k - s_n + 1);
		}

		k++;
	}

	free(p);
}

int main(int argc, char **argv)
{
	char *s = argv[1], *t = argv[2];
	KMPSubst(s, t);
	return 0;
}

Результаты тестировани
